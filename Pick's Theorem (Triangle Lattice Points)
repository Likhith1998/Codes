#include <iostream>
#include <bits/stdc++.h>
using namespace std;

struct Point {
int x;
int y;
};

float doubleArea(Point a,Point b,Point c)
{
    return abs((a.x*(b.y-c.y)+b.x*(c.y-a.y)+c.x*(a.y-b.y)));
}

int gcd(int a,int b)
{
    if(b==0) return a;
    return gcd(b,a%b);
}

int nop(Point p,Point q)
{
    if(p.x==q.x) return abs(p.y-q.y)-1;
    if(p.y==q.y) return abs(p.x-q.x)-1;
    return gcd(abs(p.x-q.x),abs(p.y-q.y))-1;
}

int noOfIntegralPoints(Point points[])
{
    int val=nop(points[0],points[1])+nop(points[1],points[2])+nop(points[2],points[0])+3;
    return (doubleArea(points[0],points[1],points[2])+2-val)/2;
}


int main()
{
    Point points[] = {{0, 0}, {5, 0}, {0, 5}};
    cout<<noOfIntegralPoints(points);
    
    return 0;
    
}
